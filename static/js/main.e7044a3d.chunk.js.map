{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","api.ts","components/FindMovie/FindMovie.tsx","App.tsx","index.tsx"],"names":["MovieCard","props","movie","className","src","Poster","alt","Title","Plot","MoviesList","movies","map","imdbID","url","getMovie","title","a","fetch","json","FindMovie","setMovies","useState","movieTitle","setMovieTitle","setMovie","hasSearchError","setSearchError","hasListError","setListError","loadMovie","movieFromServer","htmlFor","type","id","placeholder","cn","value","onChange","event","target","onClick","some","mov","App","ReactDOM","render","document","getElementById"],"mappings":"uTAOaA,EAA6B,SAACC,GACzC,IAAQC,EAAUD,EAAVC,MAER,OACE,sBAAKC,UAAU,OAAf,UACE,qBAAKA,UAAU,aAAf,SACE,wBAAQA,UAAU,gBAAlB,SACE,qBACEC,IAAKF,EAAMG,OACXC,IAAI,kBAIV,sBAAKH,UAAU,eAAf,UACE,sBAAKA,UAAU,QAAf,UACE,qBAAKA,UAAU,aAAf,SACE,wBAAQA,UAAU,iBAAlB,SACE,qBACEC,IAAI,wBACJE,IAAI,aAIV,qBAAKH,UAAU,gBAAf,SACE,mBAAGA,UAAU,aAAb,SAA2BD,EAAMK,aAIrC,sBAAKJ,UAAU,UAAf,UACGD,EAAMM,KACP,iCC7BGC,EAA8B,SAACR,GAC1C,IAAQS,EAAWT,EAAXS,OAER,OACE,qBAAKP,UAAU,SAAf,SACGO,EAAOC,KAAI,SAAAT,GAAK,OACf,cAAC,EAAD,CAEEA,MAAOA,GADFA,EAAMU,c,+CCffC,G,MAAM,+CAEL,SAAeC,EAAtB,kC,4CAAO,WAAwBC,GAAxB,eAAAC,EAAA,sEACeC,MAAM,GAAD,OAAIJ,GAAJ,OAAUE,IAD9B,cACCb,EADD,yBAGEA,EAAMgB,QAHR,4C,sBCSA,IAAMC,EAA6B,SAAC,GAA2B,IAAzBT,EAAwB,EAAxBA,OAAQU,EAAgB,EAAhBA,UACnD,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KACA,EAA0BF,mBAAuB,MAAjD,mBAAOnB,EAAP,KAAcsB,EAAd,KACA,EAAyCH,oBAAS,GAAlD,mBAAOI,EAAP,KAAuBC,EAAvB,KACA,EAAqCL,oBAAS,GAA9C,mBAAOM,EAAP,KAAqBC,EAArB,KAEMC,EAAS,uCAAG,4BAAAb,EAAA,6DAChBY,GAAa,GACbF,GAAe,GAFC,SAGcZ,EAASQ,GAHvB,QAGVQ,EAHU,QAKKvB,MAInBiB,EAASM,IAHTJ,GAAe,GACfF,EAAS,OAPK,2CAAH,qDAyBf,OACE,qCACE,uBAAMrB,UAAU,aAAhB,UACE,sBAAKA,UAAU,QAAf,UACE,wBAAOA,UAAU,QAAQ4B,QAAQ,cAAjC,wBAEE,qBAAK5B,UAAU,UAAf,SACE,uBACE6B,KAAK,OACLC,GAAG,cACHC,YAAY,0BACZ/B,UAAWgC,IACT,QACA,CAAE,YAAaV,IAEjBW,MAAOd,EACPe,SAAU,SAACC,GACTf,EAAce,EAAMC,OAAOH,eAMlCX,GAEG,mBAAGtB,UAAU,iBAAb,kDAKHwB,GAEG,mBAAGxB,UAAU,iBAAb,iDAON,sBAAKA,UAAU,mBAAf,UACE,qBAAKA,UAAU,UAAf,SACE,wBACE6B,KAAK,SACL7B,UAAU,kBACVqC,QAASX,EAHX,4BASF,qBAAK1B,UAAU,UAAf,SACE,wBACE6B,KAAK,SACL7B,UAAU,oBACVqC,QAlEM,WACZtC,KACsBQ,EAAO+B,MAAK,SAAAC,GAAG,OAAIA,EAAI9B,SAAWV,EAAMU,UAG9DQ,EAAU,GAAD,mBAAKV,GAAL,CAAaR,KAEtB0B,GAAa,KAwDT,qCAWN,qBAAKzB,UAAU,YAAf,SACGD,GAEG,qCACE,oBAAIC,UAAU,QAAd,qBACA,cAAC,EAAD,CAAWD,MAAOA,aCxGnByC,EAAgB,WAC3B,MAA4BtB,mBAA4B,IAAxD,mBAAOX,EAAP,KAAeU,EAAf,KAEA,OACE,sBAAKjB,UAAU,OAAf,UACE,qBAAKA,UAAU,eAAf,SACE,cAAC,EAAD,CAAYO,OAAQA,MAEtB,qBAAKP,UAAU,UAAf,SACE,cAAC,EAAD,CAAWO,OAAQA,EAAQU,UAAWA,UCV9CwB,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.e7044a3d.chunk.js","sourcesContent":["import React from 'react';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie;\n};\n\nexport const MovieCard: React.FC<Props> = (props) => {\n  const { movie } = props;\n\n  return (\n    <div className=\"card\">\n      <div className=\"card-image\">\n        <figure className=\"image is-4by3\">\n          <img\n            src={movie.Poster}\n            alt=\"Film logo\"\n          />\n        </figure>\n      </div>\n      <div className=\"card-content\">\n        <div className=\"media\">\n          <div className=\"media-left\">\n            <figure className=\"image is-48x48\">\n              <img\n                src=\"images/imdb-logo.jpeg\"\n                alt=\"imdb\"\n              />\n            </figure>\n          </div>\n          <div className=\"media-content\">\n            <p className=\"title is-8\">{movie.Title}</p>\n          </div>\n        </div>\n\n        <div className=\"content\">\n          {movie.Plot}\n          <br />\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\ninterface Props {\n  movies: Movie[];\n}\n\nexport const MoviesList: React.FC<Props> = (props) => {\n  const { movies } = props;\n\n  return (\n    <div className=\"movies\">\n      {movies.map(movie => (\n        <MovieCard\n          key={movie.imdbID}\n          movie={movie}\n        />\n      ))}\n    </div>\n  );\n};\n","const url = 'https://www.omdbapi.com/?apikey=42fb5338&t=';\n\nexport async function getMovie(title: string) {\n  const movie = await fetch(`${url}${title}`);\n\n  return movie.json();\n}\n","import cn from 'classnames';\nimport React, { useState } from 'react';\nimport './FindMovie.scss';\nimport { getMovie } from '../../api';\nimport { MovieCard } from '../MovieCard';\n\ntype Props = {\n  movies: Movie[],\n  setMovies: React.Dispatch<React.SetStateAction<Movie[]>>,\n};\n\nexport const FindMovie: React.FC<Props> = ({ movies, setMovies }) => {\n  const [movieTitle, setMovieTitle] = useState('');\n  const [movie, setMovie] = useState<Movie | null>(null);\n  const [hasSearchError, setSearchError] = useState(false);\n  const [hasListError, setListError] = useState(false);\n\n  const loadMovie = async () => {\n    setListError(false);\n    setSearchError(false);\n    const movieFromServer = await getMovie(movieTitle);\n\n    if (!movieFromServer.Title) {\n      setSearchError(true);\n      setMovie(null);\n    } else {\n      setMovie(movieFromServer);\n    }\n  };\n\n  const pushMovie = () => {\n    if (movie) {\n      const movieIsUnique = !(movies.some(mov => mov.imdbID === movie.imdbID));\n\n      if (movieIsUnique) {\n        setMovies([...movies, movie]);\n      } else {\n        setListError(true);\n      }\n    }\n  };\n\n  return (\n    <>\n      <form className=\"find-movie\">\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n            <div className=\"control\">\n              <input\n                type=\"text\"\n                id=\"movie-title\"\n                placeholder=\"Enter a title to search\"\n                className={cn(\n                  'input',\n                  { 'is-danger': hasSearchError },\n                )}\n                value={movieTitle}\n                onChange={(event) => {\n                  setMovieTitle(event.target.value);\n                }}\n              />\n            </div>\n          </label>\n\n          {hasSearchError\n            && (\n              <p className=\"help is-danger\">\n                Can&apos;t find a movie with such a title\n              </p>\n            )}\n\n          {hasListError\n            && (\n              <p className=\"help is-danger\">\n                The movie is already in the list\n              </p>\n            )}\n\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              className=\"button is-light\"\n              onClick={loadMovie}\n            >\n              Find a movie\n            </button>\n          </div>\n\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              className=\"button is-primary\"\n              onClick={pushMovie}\n            >\n              Add to the list\n            </button>\n          </div>\n        </div>\n      </form>\n\n      <div className=\"container\">\n        {movie\n          && (\n            <>\n              <h2 className=\"title\">Preview</h2>\n              <MovieCard movie={movie} />\n            </>\n          )}\n      </div>\n    </>\n  );\n};\n","import { useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\n\nexport const App: React.FC = () => {\n  const [movies, setMovies] = useState<Movie[] | never[]>([]);\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n      <div className=\"sidebar\">\n        <FindMovie movies={movies} setMovies={setMovies} />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}